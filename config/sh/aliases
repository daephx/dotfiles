#!/bin/env sh
#
#     █████╗ ██╗     ██╗ █████╗ ███████╗███████╗███████╗
#    ██╔══██╗██║     ██║██╔══██╗██╔════╝██╔════╝██╔════╝
#    ███████║██║     ██║███████║███████╗█████╗  ███████╗
#    ██╔══██║██║     ██║██╔══██║╚════██║██╔══╝  ╚════██║
# ██╗██║  ██║███████╗██║██║  ██║███████║███████╗███████║
# ╚═╝╚═╝  ╚═╝╚══════╝╚═╝╚═╝  ╚═╝╚══════╝╚══════╝╚══════╝
# ~/.aliases: sourced commonrc, shorthand for shell cmds

# Easier navigation:
alias -- -="cd -"            # Previous directory
alias .....="cd ../../../.." # 4 Parents
alias ....="cd ../../.."     # 3 Parents
alias ...="cd ../.."         # 2 Parents
alias ..="cd .."             # 1 Parent
alias tmp="cd /tmp"          # System Temp
alias ~="cd ~"               # HOME `cd`|`~`

# Common mistakes
alias brwe="brew"   # Typos
alias where="which" # Dammit windows

# Exit mistakes
alias x='exit'
alias xa="exit"
alias Xa="exit"
alias xit="exit"
alias eexit="exit"
alias eit="exit"
alias exot="exit"
alias q='exit'
alias Q='exit'
alias \:q='exit'

# Editors
alias e="emacs"
alias v="$VISUAL"
alias vi="$VISUAL"

# List Directories

# Detect which `ls` flavor is in use
if ls --color >/dev/null 2>&1; then # GNU `ls`
  colorflag="--color=always"
  eval 'dircolors $HOME/.ls_colors' >/dev/null
else # MacOS `ls`
  colorflag="-G"
  export LSCOLORS='BxBxhxDxfxhxhxhxhxcxcx'
fi

# Determinal ls utility
# Break loop on first found
# Priority determined left-right
deps=(exa lsd ls)
for ls in ${deps[@]}; do
  if command -v "$ls" &>/dev/null; then
    break
  fi
done

# Apply utility specific overrides
case "${ls}" in
  exa)
    default_args="$colorflag -l --group-directories-first --icons"
    alias ls="command exa $default_args"
    alias ll="ls -alF"
    alias la="ls -a"
    alias lt="ls --tree"
    alias tree="ls --tree"
    ;;
  lsd)
    default_args="$colorflag -l --group-directories-first"
    alias ls="command lsd $default_args"
    alias ll="ls -l"
    alias la="ls -a"
    alias lt="ls --tree"
    alias tree="ls --tree"
    ;;
  ls)
    default_args="$colorflag -lv --g"
    alias ls="command ls $default_args"
    alias l="ls -CF"
    alias la="ls -A"
    alias ll="ls -alF"
    ;;
esac

# Default to raw-control-characters
alias less="less -R"

# Always enable colored `grep` output
# Note: `GREP_OPTIONS="--color=auto"` is deprecated, hence the alias usage.

alias grep="grep --color=auto"
alias egrep="egrep --color=auto"
alias fgrep="fgrep --color=auto"

# Clear terminal output
alias cls="clear"
alias shell="ps -p $$"

# Reload the shell (i.e. invoke as a login shell)
alias reload="clear && exec $(sh -c 'ps -p $$ -o ppid=' | xargs -I'{}' readlink -f '/proc/{}/exe') -l"

# Clear Screen
alias cls="clear"

# Enable sudo to expand aliases
alias sudo="sudo"

# Make destructive commands interactive
alias cp="cp -i"
alias mv="mv -i"
alias rm="rm -i"

alias shell="ps -p $$"
alias mnt="mount | grep -E ^/dev | column -t" # list mounted drives
alias syn="pygmentize -l $1 $2 | less -R"     # Syntax highlight like cat

# human-readable sizes
alias df="df -h"

# File size
# alias fs="stat -f \"%z bytes\""

# hosts
alias hosts='sudo vi /etc/hosts'

# Return the current public IP address
alias myip="curl http://ipecho.net/plain; echo"

# Print each PATH entry on a separate line
alias path='echo -e "${PATH//:/\\n}" | less'

# List environment
alias ls-env="env | sed 's/;/\n/g'"

# untar archive
alias untar='tar xvf'

# Recursively delete `.DS_Store` files
alias ds_cleanup="find . -type f -name '*.DS_Store' -ls -delete"

# Docker container list
alias dps="docker ps | less -S"

# Shorthand to display command history
alias hist="history"

# Create gitignore file from online template
alias gitignore="f() { curl -sL https://www.toptal.com/developers/gitignore/api/\$@ }; f >> .gitignore"

# Git version control
if command -v git &>/dev/null; then
  alias g="git"
  alias gc="git commit"
  alias gs="git status"
  alias gb="git branch"
  alias gs="git show"
fi

# If fd-find is installed
if command -v fdfind &>/dev/null; then
  alias fd="fdfind"
fi

# Shorthand for python
alias py="/usr/bin/env python"
if command -v ipython &>/dev/null; then
  alias ipy="ipython"
fi

# Xclip commands
if command -v xclip >&/dev/null; then

  # copy working directory | Requires xclip
  alias cwd='pwd | tr -d "\r\n" | xclip -selection clipboard && echo "=> Working Directory copied to pasteboard."'

  # Pipe my public key to my clipboard. | Requires xclip
  alias public_key="less ~/.ssh/id_ed25519.pub | xclip -selection clipboard && echo '=> Public key copied to pasteboard.'"

  # Pipe my private key to my clipboard. | Requires xclip
  alias private_key="less ~/.ssh//id_rsa | xclip -selection clipboard && echo '=> Private key copied to pasteboard.'"
fi

# If WSL: Enable windows subsystem aliases
# Alternative check: attempting to avoid spawning grep
# read var </proc/version ; if echo $var == *wsl 1>/dev/null ; then echo wsl; fi
if grep -q '[Mm]icrosoft' /proc/version; then
  # quick sanity check
  alias is_wsl="echo 'true'"

  # Attempt to reclaim mem cache from WSL Guest
  alias drop_cache="sudo sh -c \
  \"echo 3 >'/proc/sys/vm/drop_caches' \
  && swapoff -a && swapon -a \
  && printf '\n%s\n' 'Ram-cache and Swap Cleared'\" \
  "
fi

# forgetful ifconfig
if !command -v ifconfig >&/dev/null; then
  alias ifconfig='ip -c a'
fi
