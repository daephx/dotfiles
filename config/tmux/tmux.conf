# tmux.conf: open-source terminal multiplexer

### Settings ###

# Enable mouse mode (tmux 2.1 and above)
set -g mouse on

# Activity bell and whistles
set -g visual-activity on

# Start numbering at 1
set -g base-index 1

# Allows for faster key repetition
set -sg escape-time 50

# re-number windows when a window is closed
set -g renumber-windows on

# automatically rename to the command running
setw -g automatic-rename on

# Use users default shell
set -g default-shell $SHELL

# Set terminal truecolor
# set -g default-terminal "${TERM}"
set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",*256col*:Tc"
set -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[ q'
setenv -g COLORTERM "truecolor"

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

set -g buffer-limit 20
set -g detach-on-destroy off
set -g display-time 1500
set -g focus-events on
set -g history-limit 20000
set -g remain-on-exit off
set -g repeat-time 300
setw -g allow-rename off


### Status bar ###

# Default statusbar settings
set -g status on
set -g status-interval 5
set -g status-position bottom
set -g status-justify left
set -g status-right-length 100
set -g status-left ""
set -g status-right "#[fg=green]#H"

# Set statusbar colors
set -g status-bg default
set -g status-fg white

# Set active tab style
set -wg window-status-current-style fg=magenta

# Set status line message style
set -g message-style 'bg=default,fg=colour11,bold'
set -g message-command-style 'bg=default,fg=colour33'

# Show status bar only when windows > 1
# set-hook -g window-linked 'set-window -F status "#{?#{==:#{session_windows},1},off,on}"'
# set-hook -g window-unlinked 'set-window -F status "#{?#{==:#{session_windows},1},off,on}"'


### Style ###

# Set parent terminal title to reflect current window in tmux session
set -g set-titles on
set -g set-titles-string "#W:#I"

# border colours
set -g pane-border-style "fg=color237"
set -g pane-active-border-style "bg=default fg=blue"

# Set window selection highlight style
set -wg mode-style bg=colour24,fg=white

# Enable undercurl
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # req: tmux-3.0


### Mappings ###

# Prefer vi style key table
setw -g mode-keys vi

# Unbind defaults
unbind '"'
unbind %

# remap prefix from 'C-b' to 'C-a'
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# Allows us to use C-a a <command> to send commands to a TMUX session inside
# another TMUX session
bind-key a send-prefix

# split panes
bind \\ split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# switch panes using Alt-arrow without prefix
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# switch panes using hjkl
bind -n M-j select-pane -L
bind -n M-l select-pane -R
bind -n M-k select-pane -U
bind -n M-h select-pane -D

# Switch window w/ hyper key
bind -n C-S-M-Pageup previous-window
bind -n C-S-M-Pagedown next-window

# Vim-like copy mode
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel

bind-key -T copy-mode-vi a send-keys -X cancel
bind-key -T copy-mode-vi i send-keys -X cancel
bind-key -T copy-mode-vi Escape send-keys -X cancel

# new window and retain cwd
bind c new-window -c "#{pane_current_path}"

# Manage tmux configuration
bind M new-window -n 'tmux.conf' -c -F "$EDITOR $XDG_CONFIG_HOME/tmux/tmux.conf";
bind r source-file "$XDG_CONFIG_HOME/tmux/tmux.conf" \; display "TMUX Config reloaded"

# Detach from session
# Prompt for safety, else use upper-case to force
bind D detach
bind d if -F '#{session_many_attached}' \
    'confirm-before -p "Detach other clients? (y/n)" "detach -a"' \
    'display "Session has only 1 client attached"'

# Kill pane/window/session shortcuts
bind Q confirm-before -p "kill all sessions? (y/n)" "kill-session -a"
bind q confirm-before -p "kill-session: #S? (y/n)" kill-session

bind X confirm-before -p "kill all windows? (y/n)" "kill-window -a"
bind x confirm-before -p "kill window: #W? (y/n)" kill-window

# Toggle status bar
bind S set -g status

# Merge session with another one (e.g. move all windows)
# If you use adhoc 1-window sessions, and you want to preserve session upon exit
# but don't want to create a lot of small unnamed 1-window sessions around
# move all windows from current session to main named one (dev, work, etc)
bind C-u command-prompt -p "Session to merge with: " \
   "run-shell 'yes | head -n #{session_windows} | xargs -I {} -n 1 tmux movew -t %%'"

# External script to quick access sessions via fzf
# bind x run-shell -b "~/.config/tmux/tmux-switch-session.sh"


### Theme ###

# tmux-power
# set -g @tmux_power_theme "default"
set -g @tmux_power_border_color 'blue'
set -g @tmux_power_transparent 'true'
set -g @tmux_power_show_web_reachable 'true'
set -g @tmux_power_left_arrow_icon ''
set -g @tmux_power_right_arrow_icon ''
set -g @tmux_power_user_icon ''

# Execute customized powerline theme
run "$XDG_CONFIG_HOME/tmux/theme.tmux"

### Plugins ###

# Set tmux plugins directory
set-environment -g -F TMUX_PLUGIN_MANAGER_PATH "${XDG_DATA_HOME}/tmux/plugins"

# List of plugins
set -g @plugin 'sainnhe/tmux-fzf'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tpm'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run "$TMUX_PLUGIN_MANAGER_PATH/tpm/tpm"
